{"version":3,"file":"static/js/680.ec5dd105.chunk.js","mappings":"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","sources":["services/sourceAPI.js","container/pages/Home/Modals/SourceUploader.jsx","container/pages/Home/Modals/DocumentUploadModal.jsx","container/pages/Home/SideBar/SourceList.jsx","container/pages/Home/SideBar/index.jsx","container/pages/Home/Main/ToolBar.jsx","container/pages/Home/Main/PromptBox.jsx","components/LoadingMessage.jsx","components/TypingMessage.jsx","container/pages/Home/Main/Message.jsx","container/pages/Home/Main/MessageList.jsx","container/pages/Home/Main/index.jsx","container/pages/Home/Home.jsx"],"sourcesContent":["import { postRequest } from \"./axiosClient\";\r\n\r\nexport const deleteFile = (data) => postRequest('sources/deleteFile', data);","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { InboxOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { Form, Input, Modal, Progress, Spin, Upload, message } from \"antd\";\r\n\r\nimport { addSource } from \"../../../../redux/source/sourceSlice\";\r\nimport constants from \"../../../../config/constants\";\r\nimport { getStorage } from \"../../../../helpers\";\r\nimport { deleteFile } from \"../../../../services/sourceAPI\";\r\n\r\nconst SourceUploader = () => {\r\n    const [form] = Form.useForm();\r\n    const [sources, setSources] = useState([]);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const uploading = useSelector((state) => state.source.uploading);\r\n    const uploadingError = useSelector((state) => state.source.uploadingError);\r\n    const onRemove = ((file) => {\r\n        if(file.path) {\r\n            deleteFile({path: file.path});\r\n        }\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"text-center\">\r\n            <button\r\n                className=\"bg-transparent text-white border border-white border-dashed hover:border-indigo-500 font-bold uppercase text-sm rounded shadow hover:shadow-lg outline-none focus:outline-none m-2 ease-linear transition-all duration-150 px-12 py-3 cursor-pointer flex items-center\"\r\n                type=\"button\"\r\n                onClick={() => setShowModal(true)}\r\n            >\r\n                {!uploading && (<><PlusOutlined className=\"text-white mr-1\" /> Add Property</>)}\r\n                {uploading && (<><Spin size=\"small\" className=\"mr-1\" /> Processing...</>)}\r\n            </button>\r\n\r\n            <Modal\r\n                open={showModal}\r\n                title=\"Add a property\"\r\n                okText=\"Submit\"\r\n                cancelText=\"Cancel\"\r\n                onCancel={() => setShowModal(false)}\r\n                onOk={() => {\r\n                    form.validateFields()\r\n                        .then(async (values) => {\r\n                            const sourceName = values.propertyName;\r\n                            const fileList = values.dragger.fileList.filter(file => file.status == 'done').map(file => ({path: file.path, filename: file.response.filename}));\r\n                            if(fileList.length == 0) return message.error('No files uploaded.');\r\n                            dispatch(addSource({sourceName, fileList}));\r\n                            form.resetFields();\r\n                            setSources([]);\r\n                            setShowModal(false);\r\n                        })\r\n                        .catch((info) => {\r\n                            console.log(\"Validate Failed:\", info);\r\n                        });\r\n                }}\r\n                okButtonProps={{ loading: uploading }}\r\n            >\r\n                <Form form={form} layout=\"vertical\">\r\n                    <Form.Item\r\n                        name=\"propertyName\"\r\n                        label=\"Property Name\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Please input the name of property\",\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item name=\"dragger\" label=\"dragger\" noStyle>\r\n                        <Upload.Dragger\r\n                            name=\"file\"\r\n                            action={`${constants.HOST_URL}sources/uploadFile`}\r\n                            accept=\"application/pdf\"\r\n                            headers={{\r\n                                Authorization: getStorage('token')\r\n                            }}\r\n                            fileList={sources}\r\n                            multiple={true}\r\n                            maxCount={5}\r\n                            onChange={({ fileList, file }) => {\r\n                                if(file.status == 'done') {\r\n                                    file.path = file.response?.path;\r\n                                }\r\n                                const filterdFiles = fileList.filter(\r\n                                    (file) => file.type === \"application/pdf\"\r\n                                );\r\n                                setSources(filterdFiles);\r\n                            }}\r\n                            onRemove={onRemove}\r\n                        >\r\n                            <p className=\"ant-upload-drag-icon\">\r\n                                <InboxOutlined />\r\n                            </p>\r\n                            <p className=\"ant-upload-text\">\r\n                                Click or drag file to this area to upload\r\n                            </p>\r\n                        </Upload.Dragger>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SourceUploader;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { InboxOutlined } from \"@ant-design/icons\";\r\nimport { Form, Modal, Upload, message } from \"antd\";\r\nimport { uploadDocument } from \"../../../../redux/document/documentSlice\";\r\nimport { getStorage } from \"../../../../helpers\";\r\nimport constants from \"../../../../config/constants\";\r\nimport { deleteFile } from \"../../../../services/sourceAPI\";\r\n\r\nconst DocumentUploadModal = ({ open, onClose }) => {\r\n    const [form] = Form.useForm();\r\n    const [sources, setSources] = useState([]);\r\n    const dispatch = useDispatch();\r\n\r\n    const uploading = useSelector((state) => state.document.loading);\r\n    const selectedSource = useSelector((state) => state.app.selectedSource);\r\n    const uploadingError = useSelector((state) => state.source.uploadingError);\r\n\r\n    const onRemove = ((file) => {\r\n        if (file.path) {\r\n            deleteFile({ path: file.path });\r\n        }\r\n    });\r\n\r\n    return (\r\n        <Modal\r\n            open={open}\r\n            title=\"Add a Documents\"\r\n            okText=\"Submit\"\r\n            cancelText=\"Cancel\"\r\n            onCancel={() => onClose()}\r\n            onOk={() => {\r\n                form.validateFields()\r\n                    .then(async (values) => {\r\n                        const fileList = values.dragger.fileList.filter(file => file.status == 'done').map(file => ({ path: file.path, filename: file.response.filename }));\r\n                        if (fileList.length == 0) return message.error('No files uploaded.');\r\n                        dispatch(uploadDocument({ fileList, sourceId: selectedSource }));\r\n                        form.resetFields();\r\n                        setSources([]);\r\n                        onClose();\r\n                    })\r\n                    .catch((info) => {\r\n                        console.log(\"Validate Failed:\", info);\r\n                    });\r\n            }}\r\n            okButtonProps={{ loading: !!uploading }}\r\n        >\r\n            <Form form={form} layout=\"vertical\">\r\n                <Form.Item name=\"dragger\" label=\"dragger\" noStyle>\r\n                    <Upload.Dragger\r\n                        name=\"file\"\r\n                        action={`${constants.HOST_URL}sources/uploadFile`}\r\n                        accept=\"application/pdf\"\r\n                        headers={{\r\n                            Authorization: getStorage('token')\r\n                        }}\r\n                        fileList={sources}\r\n                        multiple={true}\r\n                        maxCount={5}\r\n                        onChange={({ fileList, file }) => {\r\n                            if (file.status == 'done') {\r\n                                file.path = file.response?.path;\r\n                            }\r\n                            const filterdFiles = fileList.filter(\r\n                                (file) => file.type === \"application/pdf\"\r\n                            );\r\n                            setSources(filterdFiles);\r\n                        }}\r\n                        onRemove={onRemove}\r\n                    >\r\n                        <p className=\"ant-upload-drag-icon\">\r\n                            <InboxOutlined />\r\n                        </p>\r\n                        <p className=\"ant-upload-text\">\r\n                            Click or drag file to this area to upload\r\n                        </p>\r\n                    </Upload.Dragger>\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default DocumentUploadModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  Menu,\r\n  Spin,\r\n  message,\r\n  Dropdown,\r\n  Popconfirm,\r\n  Form,\r\n  Modal,\r\n  Input,\r\n  Pagination,\r\n  Tooltip,\r\n} from \"antd\";\r\nimport {\r\n  FilePdfOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  EyeOutlined,\r\n  FullscreenOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { BsChatLeftDots, BsThreeDotsVertical } from \"react-icons/bs\";\r\n// import { Document, Page, pdfjs } from \"react-pdf\";\r\n\r\nimport { Viewer } from \"@react-pdf-viewer/core\";\r\nimport { fullScreenPlugin } from \"@react-pdf-viewer/full-screen\";\r\nimport { pageNavigationPlugin } from \"@react-pdf-viewer/page-navigation\";\r\n\r\n// Import styles\r\nimport \"@react-pdf-viewer/core/lib/styles/index.css\";\r\nimport \"@react-pdf-viewer/full-screen/lib/styles/index.css\";\r\nimport \"@react-pdf-viewer/page-navigation/lib/styles/index.css\";\r\n\r\nimport { getSources } from \"../../../../redux/source/sourceSlice\";\r\nimport {\r\n  deleteDocument,\r\n  getDocuments,\r\n  updateDocument,\r\n} from \"../../../../redux/document/documentSlice\";\r\nimport { setStorage, getStorage, getItem } from \"../../../../helpers\";\r\nimport { setSelectedSource } from \"../../../../redux/app/appSlice\";\r\nimport DocumentUploadModal from \"../Modals/DocumentUploadModal\";\r\n\r\nconst SourceList = () => {\r\n  // useEffect(() => { pdfjs.GlobalWorkerOptions.workerSrc = `pdf.worker.js`; });\r\n  const [selectedDocument, setSelectedDocument] = useState({});\r\n  const [openPDFModal, setOpenPDFModal] = useState(false);\r\n  const loading = useSelector((state) => state.source.loading);\r\n  const error = useSelector((state) => state.source.error);\r\n  const sources = useSelector((state) => state.source.sources);\r\n  const documents = useSelector((state) => state.document.documents);\r\n  const uploading = useSelector((state) => state.document.loading);\r\n  const dispatch = useDispatch();\r\n  const selectedSource = useSelector((state) => state.app.selectedSource);\r\n  const [openDocumentUploadModal, setOpenDocumentUploadModal] = useState(false);\r\n  const [openDocumentUpdateModal, setOpenDocumentUpdateModal] = useState(false);\r\n  const [form] = Form.useForm();\r\n\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const fullScreenPluginInstance = fullScreenPlugin();\r\n  const pageNavigationPluginInstance = pageNavigationPlugin();\r\n  const { EnterFullScreen } = fullScreenPluginInstance;\r\n  const { CurrentPageLabel } = pageNavigationPluginInstance;\r\n\r\n  const onDocumentLoadSuccess = ({ numPages }) => {\r\n    setNumPages(numPages);\r\n  };\r\n\r\n  const confirm = (e) => {\r\n    console.log(e);\r\n    dispatch(deleteDocument(selectedDocument._id));\r\n  };\r\n  const cancel = (e) => {\r\n    console.log(e);\r\n  };\r\n\r\n  const actionItems = [\r\n    {\r\n      key: \"1\",\r\n      label: (\r\n        <Popconfirm\r\n          title=\"Delete the document!\"\r\n          description=\"Are you sure to delete this document?\"\r\n          onConfirm={confirm}\r\n          onCancel={cancel}\r\n          okText=\"Yes\"\r\n          cancelText=\"No\"\r\n        >\r\n          <DeleteOutlined /> Delete{\" \"}\r\n        </Popconfirm>\r\n      ),\r\n    },\r\n    {\r\n      key: \"2\",\r\n      label: (\r\n        <span onClick={() => setOpenDocumentUpdateModal(true)}>\r\n          <EditOutlined /> Rename\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      key: \"3\",\r\n      label: (\r\n        <span\r\n          onClick={() => {\r\n            // window.open(selectedDocument.path.replace(\"public/\", \"\"));\r\n            setOpenPDFModal(true);\r\n          }}\r\n        >\r\n          <EyeOutlined /> View\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const items = sources.map(({ name, sourceId }, index) => {\r\n    const subMenu = documents\r\n      .filter((item) => item.sourceId === sourceId)\r\n      .map((document) =>\r\n        getItem(\r\n          <div className=\"flex justify-between items-center\">\r\n            <span\r\n              className=\"max-w-[135px] text-ellipsis overflow-hidden\"\r\n              title={document.name}\r\n            >\r\n              {document.name}\r\n            </span>{\" \"}\r\n            <Dropdown\r\n              onOpenChange={(open) => {\r\n                if (open) {\r\n                  setSelectedDocument(document);\r\n                }\r\n              }}\r\n              trigger=\"click\"\r\n              menu={{ items: actionItems }}\r\n              placement=\"bottomLeft\"\r\n              arrow={{ pointAtCenter: true }}\r\n            >\r\n              <div>\r\n                <BsThreeDotsVertical />\r\n              </div>\r\n            </Dropdown>\r\n          </div>,\r\n          `${document._id}`,\r\n          <FilePdfOutlined />,\r\n          null,\r\n          true\r\n        )\r\n      );\r\n    subMenu.push(\r\n      getItem(\r\n        uploading == sourceId ? \"Processing...\" : \"Add Document\",\r\n        `addDocument-${index}-${sourceId}`,\r\n        uploading == sourceId ? <Spin size=\"small\" /> : <PlusOutlined />,\r\n        null\r\n      )\r\n    );\r\n    if (subMenu.length > 0)\r\n      return getItem(name, `${sourceId}`, <BsChatLeftDots />, subMenu);\r\n    return getItem(name, `${sourceId}`, <BsChatLeftDots />);\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(getSources());\r\n    dispatch(getDocuments());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let latestKey = getStorage(\"latestKey\") || sources[0]?.sourceId;\r\n    if (latestKey) {\r\n      dispatch(setSelectedSource({ sourceId: latestKey }));\r\n    }\r\n  }, [sources]);\r\n\r\n  // useEffect(() => {\r\n  //     if (selectedSource) {\r\n\r\n  //     }\r\n  // }, [selectedSource]);\r\n\r\n  if (loading)\r\n    return <div className=\"text-center text-gray-400\">Loading...</div>;\r\n\r\n  const onOpenChange = (keys) => {\r\n    if (keys.length < 2) return;\r\n    let key = keys[keys.length - 1];\r\n    dispatch(setSelectedSource({ sourceId: key }));\r\n    setStorage(\"latestKey\", key);\r\n  };\r\n\r\n  const handleClick = ({ key }) => {\r\n    if (key.startsWith(\"addDocument\")) {\r\n      if (uploading) {\r\n        return message.warning(\"Server is busy now. Please wait a moment...\");\r\n      }\r\n      setOpenDocumentUploadModal(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Menu\r\n        openKeys={[`${selectedSource}`]}\r\n        onOpenChange={onOpenChange}\r\n        mode=\"inline\"\r\n        theme=\"dark\"\r\n        items={items}\r\n        selectable={false}\r\n        onClick={handleClick}\r\n      />\r\n      <DocumentUploadModal\r\n        open={openDocumentUploadModal}\r\n        onClose={() => setOpenDocumentUploadModal(false)}\r\n      />\r\n      <Modal\r\n        open={openDocumentUpdateModal}\r\n        title=\"Change Documents\"\r\n        okText=\"Submit\"\r\n        cancelText=\"Cancel\"\r\n        onCancel={() => setOpenDocumentUpdateModal(false)}\r\n        onOk={() => {\r\n          form\r\n            .validateFields()\r\n            .then(async (values) => {\r\n              dispatch(updateDocument({ ...values, id: selectedDocument._id }));\r\n              form.resetFields();\r\n              setOpenDocumentUpdateModal(false);\r\n            })\r\n            .catch((info) => {\r\n              console.log(\"Validate Failed:\", info);\r\n            });\r\n        }}\r\n      >\r\n        <Form form={form} layout=\"vertical\">\r\n          <Form.Item\r\n            name=\"documentName\"\r\n            label=\"Document Name\"\r\n            initialValue={selectedDocument.name}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input the name of property\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n      <Modal\r\n        width={650}\r\n        open={openPDFModal}\r\n        title={selectedDocument.name}\r\n        onCancel={() => setOpenPDFModal(false)}\r\n        footer={[\r\n          <div className=\"flex justify-center items-center h-[32px]\">\r\n            <CurrentPageLabel>\r\n              {(props) => (\r\n                <span>{`${props.currentPage + 1} / ${\r\n                  props.numberOfPages\r\n                }`}</span>\r\n              )}\r\n            </CurrentPageLabel>\r\n            <EnterFullScreen>\r\n              {(props) => (\r\n                <Tooltip placement=\"top\" title={'Full Screen Mode'}>\r\n                  <span className=\"cursor-pointer ml-2\" onClick={props.onClick}>\r\n                    <FullscreenOutlined />\r\n                  </span>\r\n                </Tooltip>\r\n              )}\r\n            </EnterFullScreen>\r\n          </div>,\r\n        ]}\r\n      >\r\n        <div\r\n          style={{\r\n            border: \"1px solid rgba(0, 0, 0, 0.3)\",\r\n            height: \"75vh\",\r\n          }}\r\n        >\r\n          {selectedDocument.path && (\r\n            <Viewer\r\n              fileUrl={selectedDocument.path.replace(\"public\", \"\")}\r\n              plugins={[fullScreenPluginInstance, pageNavigationPluginInstance]}\r\n            />\r\n          )}\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SourceList;\r\n","import React from \"react\";\r\nimport { Layout } from \"antd\";\r\nimport SourceUploader from \"../Modals/SourceUploader\";\r\nimport SourceList from \"./SourceList\";\r\n\r\nconst { Sider } = Layout;\r\n\r\nconst SideBar = () => {\r\n  return (\r\n    // <Sider\r\n    //   theme={\"dark\"}\r\n    //   width={250}\r\n    //   className=\"hidden sm:block\"\r\n    //   style={{\r\n    //     overflow: 'auto',\r\n    //     height: '100vh',\r\n    //     position: 'fixed',\r\n    //     left: 0,\r\n    //     top: 0,\r\n    //     bottom: 0,\r\n    //   }}\r\n    // >\r\n    //   <SourceUploader />\r\n      <SourceList />\r\n    // </Sider>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import { useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Drawer, Input, Menu, Modal, Popconfirm } from \"antd\";\r\nimport { MenuUnfoldOutlined, DeleteOutlined, EditOutlined, ClearOutlined, CloseOutlined } from \"@ant-design/icons\";\r\n\r\nimport {\r\n    deleteSource,\r\n    renameSource,\r\n} from \"../../../../redux/source/sourceSlice\";\r\nimport UserMenu from \"../../../layouts/partials/UserMenu\";\r\nimport SideBar from \"../SideBar\";\r\nimport { deleteMessages } from \"../../../../redux/message/messageSlice\";\r\nimport SourceUploader from \"../Modals/SourceUploader\";\r\n\r\nconst ToolBar = () => {\r\n\r\n    const location = useLocation();\r\n    const dispatch = useDispatch();\r\n    const deleting = useSelector((state) => state.source.deleting);\r\n    const renaming = useSelector((state) => state.source.renaming);\r\n    const reseting = useSelector((state) => state.source.reseting);\r\n    const selectedSource = useSelector((state) => state.app.selectedSource);\r\n    const [renameModalOpen, setRenameModalOpen] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [propertyName, setPropertyName] = useState(\"\");\r\n\r\n    const showDrawer = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const onClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setPropertyName(e.target.value);\r\n    };\r\n\r\n    const handleOK = () => {\r\n        dispatch(\r\n            renameSource({ name: propertyName, sourceId: selectedSource })\r\n        );\r\n        setPropertyName(\"\");\r\n        setRenameModalOpen(false);\r\n    };\r\n\r\n    const handleDelete = (e) => {\r\n        e.preventDefault();\r\n        dispatch(deleteSource({ sourceId: selectedSource }));\r\n    };\r\n    const handleReset = () => {\r\n        // e.preventDefault();\r\n        dispatch(deleteMessages({ sourceId: selectedSource }));\r\n    };\r\n\r\n    const tools = [\r\n        {\r\n            title: \"Open Documents\",\r\n            label: <span className=\"cursor-pointer inline-block px-1 hover:text-[#40a9ff]\">\r\n                <MenuUnfoldOutlined className=\"!text-[18px]\" />\r\n            </span>,\r\n            className: \"!inline sm:!hidden\",\r\n            onClick: showDrawer,\r\n        },\r\n        {\r\n            title: \"Delete Property\",\r\n            label: <Popconfirm\r\n                placement=\"bottomLeft\"\r\n                description={\r\n                    \"Are you sure you want to delete this property?\"\r\n                }\r\n                onConfirm={handleDelete}\r\n                okText=\"Yes\"\r\n                okButtonProps={{\r\n                    className:\r\n                        \"bg-red-600 hover:!bg-red-500 text-white\",\r\n                }}\r\n                cancelText=\"No\"\r\n                icon={false}\r\n            >\r\n                <span\r\n                    className=\"cursor-pointer inline-block px-1 hover:text-[#40a9ff]\"\r\n                >\r\n                    <DeleteOutlined className=\"!text-[18px]\" /> Delete\r\n                </span>\r\n            </Popconfirm>\r\n        },\r\n        {\r\n            title: \"Rename Property\",\r\n            label: <span\r\n                className=\"cursor-pointer inline-block px-1 hover:text-[#40a9ff]\"\r\n            >\r\n                <EditOutlined className=\"!text-[18px]\" /> Rename\r\n            </span>,\r\n            onClick: () => {\r\n                setRenameModalOpen(true);\r\n            },\r\n        },\r\n        {\r\n            title: \"Reset chat history\",\r\n            label: <span className=\"cursor-pointer inline-block px-1 hover:text-[#40a9ff]\"\r\n            >\r\n                <ClearOutlined className=\"!text-[18px]\" /> Reset chat history\r\n            </span>,\r\n            onClick: handleReset,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <div className=\"z-[9999] w-full sticky flex items-center justify-between flex-wrap p-1 shadow left-0 top-0 bg-white\">\r\n                <Menu mode=\"horizontal\" className=\"w-1/2 border-0\" selectable={false} items={tools} />\r\n                <div className=\"w-1/2 flex justify-end pr-2\">\r\n                    {location.pathname == '/home' && <UserMenu />}\r\n                </div>\r\n            </div>\r\n            <Modal\r\n                title=\"Rename Property\"\r\n                style={{\r\n                    top: \"10%\",\r\n                }}\r\n                open={renameModalOpen}\r\n                onOk={handleOK}\r\n                onCancel={() => setRenameModalOpen(false)}\r\n                okButtonProps={{\r\n                    className: \"bg-blue-600\",\r\n                }}\r\n            >\r\n                <Input\r\n                    placeholder=\"Input property name...\"\r\n                    className=\"mt-2\"\r\n                    onChange={handleChange}\r\n                    value={propertyName}\r\n                />\r\n            </Modal>\r\n            <Drawer title=\"\" width={250} placement=\"left\" style={{ backgroundColor: '#001529', color: '#fff' }} bodyStyle={{ padding: 0 }} onClose={onClose} open={open} closeIcon={<CloseOutlined style={{ color: '#fff' }} />}>\r\n                <SourceUploader />\r\n                <SideBar />\r\n            </Drawer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ToolBar;\r\n","import React from \"react\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Button, Input, Space } from \"antd\";\r\nimport { SendOutlined } from \"@ant-design/icons\";\r\nimport { sendMessage } from \"../../../../redux/message/messageSlice\";\r\n\r\nconst PromptBox = () => {\r\n    const dispatch = useDispatch();\r\n    const waiting = useSelector((state) => state.message.waiting);\r\n    const error = useSelector((state) => state.message.promptError);\r\n    const selectedSource = useSelector((state) => state.app.selectedSource);\r\n    const canAsk = useSelector((state) => state.source.sources.length > 0);\r\n    const [query, setQuery] = useState(\"\");\r\n    const inputRef = useRef(null);\r\n\r\n    // handle form submission\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        if (waiting) return;\r\n        if (!query) return;\r\n        const question = query.trim();\r\n        // here dispatch action to send a question to the server\r\n        dispatch(\r\n            sendMessage({\r\n                sourceId: selectedSource,\r\n                text: question,\r\n                isChatOwner: true,\r\n            })\r\n        );\r\n        setQuery(\"\");\r\n    };\r\n\r\n    // Prevent empty submission\r\n    const handleEnter = (e) => {\r\n        if (e.key === \"Enter\" && query) {\r\n            handleClick(e);\r\n        } else if (e.key == \"Enter\") {\r\n            e.preventDefault();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (canAsk && !waiting) {\r\n            inputRef.current?.focus();\r\n        }\r\n    }, [canAsk, waiting]);\r\n\r\n    return (\r\n        <div className=\"py-3 bg-white w-full px-2 sticky bottom-0 left-0\">\r\n            <div className=\"max-w-3xl pl-2 mx-auto\">\r\n                <Space.Compact style={{ width: \"100%\" }} size=\"large\">\r\n                    <Input\r\n                        allowClear\r\n                        placeholder={\r\n                            waiting\r\n                                ? \"Waiting for response...\"\r\n                                : \"Ask any question.\"\r\n                        }\r\n                        onKeyDown={handleEnter}\r\n                        value={query}\r\n                        onChange={(e) => setQuery(e.target.value)}\r\n                        ref={inputRef}\r\n                        disabled={!canAsk || waiting}\r\n                    />\r\n                    <Button\r\n                        type='primary'\r\n                        icon={<SendOutlined />}\r\n                        onClick={handleClick}\r\n                        disabled={!canAsk || waiting}\r\n                    >\r\n                    </Button>\r\n                </Space.Compact>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PromptBox;\r\n","import { Spin } from \"antd\";\r\n\r\nconst LoadingMessage = () => {\r\n    return (\r\n        <div className=\"px-3 py-2 flex flex-row w-full justify-start\">\r\n            <div className=\"px-3 py-2 w-fit lg:max-w-lg flex flex-col  rounded-lg  shadow-slate-200 shadow-sm  text-sm\">\r\n                <Spin />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoadingMessage;\r\n","import { Typewriter } from \"react-simple-typewriter\";\r\n\r\nconst TypingMessage = ({message}) => {\r\n    return <Typewriter words={[message]} typeSpeed={20} />;\r\n};\r\n\r\nexport default TypingMessage\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { MailOutlined, CopyOutlined } from '@ant-design/icons';\r\nimport { Button, message as toast } from 'antd';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport classNames from 'classnames';\r\n\r\nimport TypingMessage from \"../../../../components/TypingMessage\";\r\n\r\nconst Message = ({ message, isLast, onClick }) => {\r\n    const { text, isChatOwner, stream } = message;\r\n    const user = useSelector(state => state.auth.user);\r\n    const streamMode = stream && isLast;\r\n\r\n    return (\r\n        <div\r\n            className={`px-2 py-2 flex w-full ${isChatOwner ? \"justify-end flex-row\" : \"flex-col-reverse justify-start flex-wrap\"\r\n                }`}\r\n        >\r\n            <div\r\n                className={`px-3 py-2 w-fit lg:max-w-lg flex flex-col shadow-slate-200 shadow-sm whitespace-pre-wrap text-sm \r\n                ${isChatOwner\r\n                        ? \"order-1  bg-blue-500 text-white cursor-default rounded-bl-lg rounded-tr-lg rounded-tl-lg\"\r\n                        : \"order-2  bg-gray-200  text-gray-800 rounded-br-lg rounded-tr-lg rounded-tl-lg\"\r\n                    }`}\r\n            >\r\n                <div className={classNames({ 'cursor-pointer': !isChatOwner })} onClick={() => isChatOwner ? null : onClick()}>\r\n                    {streamMode ? <TypingMessage className=\"whitespace-pre-wrap\" message={text} /> : text}\r\n                </div>\r\n            </div>\r\n            {!isChatOwner && <div className='mt-2 flex'><Link\r\n                to='#'\r\n                onClick={(e) => {\r\n                    window.location.href = `mailto:${user.email}?subject=${'Landlordgenius.AI'}&body=${text}`;\r\n                    e.preventDefault();\r\n                }}\r\n            >\r\n                <Button className='mr-2' type='primary' icon={<MailOutlined />}>Email</Button>\r\n            </Link> <CopyToClipboard text={text} onCopy={() => {\r\n                toast.info('This text is copied!')\r\n            }}><Button type='primary' icon={<CopyOutlined />}>Copy</Button></CopyToClipboard></div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Card, Drawer, Space } from \"antd\";\r\n\r\nimport LoadingMessage from \"../../../../components/LoadingMessage\";\r\nimport Message from \"./Message\";\r\n\r\nconst MessageList = ({ messages }) => {\r\n    const messageListRef = useRef(null);\r\n    const waiting = useSelector((state) => state.message.waiting);\r\n    const selectedSource = useSelector((state) => state.app.selectedSource);\r\n    const user = useSelector((state) => state.auth.user);\r\n    const [open, setOpen] = useState(false);\r\n    const [selMessageSource, setSelMessageSource] = useState([]);\r\n\r\n    const showDrawer = (message) => {\r\n        if (!user.isAdmin) return;\r\n        setSelMessageSource(message.sourceDocuments);\r\n        setOpen(true);\r\n    };\r\n\r\n    const onClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        // 👇️ scroll to bottom every time messages change\r\n        messageListRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [messages]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"w-full max-w-3xl py-5 sm:py-0 mx-auto\">\r\n                {selectedSource && messages.map((message, index) => (\r\n                    <Message\r\n                        key={index}\r\n                        message={message}\r\n                        isLast={messages.length === index + 1}\r\n                        onClick={() => showDrawer(message)}\r\n                    />\r\n                ))}\r\n                {waiting && <LoadingMessage />}\r\n                <div ref={messageListRef}></div>\r\n                <Drawer title=\"Sources Documents\" width={350} placement=\"right\" onClose={onClose} open={open}>\r\n                    <Space direction=\"vertical\">\r\n                        {selMessageSource.map((source, i) => <Card title={`Document ${i + 1}`} key={i}>\r\n                            <p>{source.pageContent}</p>\r\n                        </Card>)}\r\n                    </Space>\r\n                </Drawer>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MessageList;\r\n","import { useEffect } from \"react\";\r\nimport classNames from 'classnames';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Empty, Spin } from \"antd\";\r\n\r\nimport { getMessages } from \"../../../../redux/message/messageSlice\";\r\n\r\n// components\r\nimport ToolBar from \"./ToolBar\";\r\nimport PromptBox from \"./PromptBox\";\r\nimport MessageList from \"./MessageList\";\r\n\r\nconst Main = () => {\r\n\r\n    const location = useLocation();\r\n    const dispatch = useDispatch();\r\n    const loading = useSelector((state) => state.message.loading);\r\n    const error = useSelector((state) => state.message.error);\r\n    const messages = useSelector((state) => state.message.messages) || [];\r\n    const selectedSource = useSelector((state) => state.app.selectedSource);\r\n\r\n    useEffect(() => {\r\n        if (selectedSource) {\r\n            dispatch(getMessages({ sourceId: selectedSource }));\r\n        }\r\n    }, [selectedSource]);\r\n\r\n    // if (loading) return <Loader />;\r\n\r\n    return (\r\n        <div\r\n            className=\"max-w-full mx-auto\"\r\n        >\r\n            <div className={classNames('bg-white', { 'h-full': location.pathname == '/home' })}>\r\n                <ToolBar />\r\n                <div className={classNames(\"flex justify-center overflow-auto h-[calc(100vh_-_117px)]\", {'items-center' : (loading || !messages.length)})}>\r\n                    {loading && <Spin className=\"mt-4\" size=\"large\"></Spin>}\r\n                    {(!loading && messages.length > 0) ? (\r\n                        <MessageList messages={messages} />\r\n                    ) : (\r\n                        !loading && <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    )}\r\n                </div>\r\n                <PromptBox />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport { Layout } from \"antd\";\r\nimport Main from \"./Main\";\r\nimport SideBar from \"./SideBar\";\r\nimport SourceUploader from \"./Modals/SourceUploader\";\r\nconst { Content, Sider } = Layout;\r\n\r\nfunction Home() {\r\n    return (\r\n        <>\r\n            <Sider\r\n                theme={\"dark\"}\r\n                width={250}\r\n                className=\"hidden sm:block z-50\"\r\n                style={{\r\n                    overflow: 'auto',\r\n                    height: '100vh',\r\n                    position: 'fixed',\r\n                    left: 0,\r\n                    top: 0,\r\n                    bottom: 0,\r\n                }}\r\n            >\r\n                <SourceUploader />\r\n                <SideBar />\r\n            </Sider>\r\n            <Layout className=\"sm:ml-[250px]\">\r\n                <Content>\r\n                    <Main />\r\n                </Content>\r\n            </Layout>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n"],"names":["deleteFile","data","postRequest","_Form$useForm","Form","form","_slicedToArray","_useState","useState","_useState2","sources","setSources","_useState3","_useState4","showModal","setShowModal","dispatch","useDispatch","uploading","useSelector","state","source","uploadingError","_jsxs","className","children","type","onClick","_Fragment","_jsx","PlusOutlined","Spin","size","Modal","open","title","okText","cancelText","onCancel","onOk","validateFields","then","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","sourceName","fileList","wrap","_context","prev","next","propertyName","dragger","filter","file","status","map","path","filename","response","length","abrupt","message","addSource","resetFields","stop","_x","apply","arguments","catch","info","console","log","okButtonProps","loading","layout","name","label","rules","required","Input","noStyle","Upload","action","concat","constants","accept","headers","Authorization","getStorage","multiple","maxCount","onChange","_ref2","_file$response","filterdFiles","onRemove","InboxOutlined","onClose","document","selectedSource","app","uploadDocument","sourceId","_ref3","selectedDocument","setSelectedDocument","openPDFModal","setOpenPDFModal","error","documents","_useState5","_useState6","openDocumentUploadModal","setOpenDocumentUploadModal","_useState7","_useState8","openDocumentUpdateModal","setOpenDocumentUpdateModal","_useState9","_useState10","_useState11","_useState12","fullScreenPluginInstance","fullScreenPlugin","pageNavigationPluginInstance","pageNavigationPlugin","EnterFullScreen","CurrentPageLabel","actionItems","key","Popconfirm","description","onConfirm","e","deleteDocument","_id","DeleteOutlined","EditOutlined","EyeOutlined","items","index","subMenu","item","getItem","Dropdown","onOpenChange","trigger","menu","placement","arrow","pointAtCenter","BsThreeDotsVertical","FilePdfOutlined","push","BsChatLeftDots","useEffect","getSources","getDocuments","_sources$","latestKey","setSelectedSource","Menu","openKeys","keys","setStorage","mode","theme","selectable","startsWith","DocumentUploadModal","_ref4","updateDocument","_objectSpread","id","initialValue","width","footer","props","currentPage","numberOfPages","Tooltip","FullscreenOutlined","style","border","height","Viewer","fileUrl","replace","plugins","Layout","SourceList","location","useLocation","deleting","renaming","reseting","renameModalOpen","setRenameModalOpen","setOpen","setPropertyName","tools","MenuUnfoldOutlined","preventDefault","deleteSource","icon","ClearOutlined","deleteMessages","pathname","UserMenu","top","renameSource","placeholder","target","value","Drawer","backgroundColor","color","bodyStyle","padding","closeIcon","CloseOutlined","SourceUploader","SideBar","waiting","promptError","canAsk","query","setQuery","inputRef","useRef","handleClick","question","trim","sendMessage","text","isChatOwner","_inputRef$current","current","focus","Space","allowClear","onKeyDown","ref","disabled","Button","SendOutlined","Typewriter","words","typeSpeed","isLast","stream","user","auth","streamMode","classNames","TypingMessage","Link","to","window","href","email","MailOutlined","CopyToClipboard","onCopy","toast","CopyOutlined","messages","messageListRef","selMessageSource","setSelMessageSource","_messageListRef$curre","scrollIntoView","behavior","Message","isAdmin","sourceDocuments","showDrawer","LoadingMessage","direction","i","Card","pageContent","getMessages","ToolBar","MessageList","Empty","image","PromptBox","Content","Sider","overflow","position","left","bottom","Main"],"sourceRoot":""}