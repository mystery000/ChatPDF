{"version":3,"file":"static/js/119.9832a6d5.chunk.js","mappings":"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","sources":["container/pages/Home/Main/Loader.jsx","container/pages/Home/Modals/SourceUploader.jsx","container/pages/Home/Modals/DocumentUploadModal.jsx","container/pages/Home/SideBar/SourceList.jsx","container/pages/Home/SideBar/index.jsx","container/pages/Home/Main/ToolBar.jsx","container/pages/Home/Main/PromptBox.jsx","container/pages/Home/Main/Empty.jsx","components/LoadingMessage.jsx","components/TypingMessage.jsx","container/pages/Home/Main/Message.jsx","container/pages/Home/Main/MessageList.jsx","container/pages/Home/Main/index.jsx","container/pages/Home/Home.jsx"],"sourcesContent":["import { Empty, Spin } from \"antd\";\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"w-full flex flex-col items-center h-[calc(100vh_-_120px)]\">\r\n            <Spin className=\"mt-2\" size=\"large\"></Spin>\r\n            {/* <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} /> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormData from \"form-data\";\r\nimport { InboxOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { Form, Input, Modal, Progress, Spin, Upload, message } from \"antd\";\r\nimport { uploadSource } from \"../../../../redux/source/sourceSlice\";\r\n\r\nconst SourceUploader = () => {\r\n    const [form] = Form.useForm();\r\n    const [sources, setSources] = useState([]);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const uploading = useSelector((state) => state.source.uploading);\r\n    const uploadingError = useSelector((state) => state.source.uploadingError);\r\n\r\n    return (\r\n        <div className=\"text-center\">\r\n            <button\r\n                className=\"bg-transparent text-white border border-white border-dashed hover:border-indigo-500 font-bold uppercase text-sm rounded shadow hover:shadow-lg outline-none focus:outline-none m-2 ease-linear transition-all duration-150 px-12 py-3 cursor-pointer flex items-center\"\r\n                type=\"button\"\r\n                onClick={() => setShowModal(true)}\r\n            >\r\n                {!uploading && <PlusOutlined className=\"text-white mr-1\" />}\r\n                {uploading && <Spin size=\"small\" className=\"mr-1\" />}\r\n                Add Property\r\n            </button>\r\n\r\n            <Modal\r\n                open={showModal}\r\n                title=\"Add a property\"\r\n                okText=\"Upload\"\r\n                cancelText=\"Cancel\"\r\n                onCancel={() => setShowModal(false)}\r\n                onOk={() => {\r\n                    form.validateFields()\r\n                        .then(async (values) => {\r\n                            const propertyName = values.propertyName;\r\n                            const fileList = values.dragger.fileList;\r\n                            // Create from to upload files into server\r\n                            const formData = new FormData();\r\n                            formData.append(\"sourceName\", propertyName);\r\n                            fileList.forEach(({ originFileObj }) => {\r\n                                formData.append(\"files\", originFileObj);\r\n                            });\r\n                            dispatch(uploadSource(formData));\r\n                            form.resetFields();\r\n                            setSources([]);\r\n                            setShowModal(false)\r\n                        })\r\n                        .catch((info) => {\r\n                            console.log(\"Validate Failed:\", info);\r\n                        });\r\n                }}\r\n                okButtonProps={{ loading: uploading }}\r\n            >\r\n                <Form form={form} layout=\"vertical\">\r\n                    <Form.Item\r\n                        name=\"propertyName\"\r\n                        label=\"Property Name\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Please input the name of property\",\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item name=\"dragger\" label=\"dragger\" noStyle>\r\n                        <Upload.Dragger\r\n                            name=\"files\"\r\n                            beforeUpload={() => false}\r\n                            accept=\"application/pdf\"\r\n                            fileList={sources}\r\n                            multiple={true}\r\n                            maxCount={5}\r\n                            onChange={({ fileList }) => {\r\n                                const filterdFiles = fileList.filter(\r\n                                    (file) => file.type === \"application/pdf\"\r\n                                );\r\n                                setSources(filterdFiles);\r\n                            }}\r\n                        >\r\n                            <p className=\"ant-upload-drag-icon\">\r\n                                <InboxOutlined />\r\n                            </p>\r\n                            <p className=\"ant-upload-text\">\r\n                                Click or drag file to this area to upload\r\n                            </p>\r\n                        </Upload.Dragger>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SourceUploader;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormData from \"form-data\";\r\nimport { InboxOutlined } from \"@ant-design/icons\";\r\nimport { Form, Modal, Upload} from \"antd\";\r\nimport { uploadDocument } from \"../../../../redux/document/documentSlice\";\r\n\r\nconst DocumentUploadModal = ({ open, onClose }) => {\r\n    const [form] = Form.useForm();\r\n    const [sources, setSources] = useState([]);\r\n    const dispatch = useDispatch();\r\n\r\n    const uploading = useSelector((state) => state.document.loading);\r\n    const selectedSource = useSelector((state) => state.app.selectedSource);\r\n    const uploadingError = useSelector((state) => state.source.uploadingError);\r\n\r\n    return (\r\n        <Modal\r\n            open={open}\r\n            title=\"Add a Documents\"\r\n            okText=\"Upload\"\r\n            cancelText=\"Cancel\"\r\n            onCancel={() => onClose()}\r\n            onOk={() => {\r\n                form.validateFields()\r\n                    .then(async (values) => {\r\n                        const fileList = values.dragger.fileList;\r\n                        // Create from to upload files into server\r\n                        const formData = new FormData();\r\n                        formData.append(\"sourceId\", selectedSource);\r\n                        fileList.forEach(({ originFileObj }) => {\r\n                            formData.append(\"files\", originFileObj);\r\n                        });\r\n                        dispatch(uploadDocument(formData));\r\n                        form.resetFields();\r\n                        setSources([]);\r\n                        onClose();\r\n                    })\r\n                    .catch((info) => {\r\n                        console.log(\"Validate Failed:\", info);\r\n                    });\r\n            }}\r\n            okButtonProps={{ loading: !!uploading }}\r\n        >\r\n            <Form form={form} layout=\"vertical\">\r\n                <Form.Item name=\"dragger\" label=\"dragger\" noStyle>\r\n                    <Upload.Dragger\r\n                        name=\"files\"\r\n                        beforeUpload={() => false}\r\n                        accept=\"application/pdf\"\r\n                        fileList={sources}\r\n                        multiple={true}\r\n                        maxCount={5}\r\n                        onChange={({ fileList }) => {\r\n                            const filterdFiles = fileList.filter(\r\n                                (file) => file.type === \"application/pdf\"\r\n                            );\r\n                            setSources(filterdFiles);\r\n                        }}\r\n                    >\r\n                        <p className=\"ant-upload-drag-icon\">\r\n                            <InboxOutlined />\r\n                        </p>\r\n                        <p className=\"ant-upload-text\">\r\n                            Click or drag file to this area to upload\r\n                        </p>\r\n                    </Upload.Dragger>\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default DocumentUploadModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Menu, Spin, message } from \"antd\";\r\n\r\nimport { FilePdfOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { BsChatLeftDots } from \"react-icons/bs\";\r\n\r\nimport { getSources } from \"../../../../redux/source/sourceSlice\";\r\nimport { getDocuments } from \"../../../../redux/document/documentSlice\";\r\nimport { setStorage, getStorage, getItem } from \"../../../../helpers\";\r\nimport { setSelectedSource } from \"../../../../redux/app/appSlice\";\r\nimport DocumentUploadModal from \"../Modals/DocumentUploadModal\";\r\n\r\nconst SourceList = () => {\r\n\r\n    const loading = useSelector((state) => state.source.loading);\r\n    const error = useSelector((state) => state.source.error);\r\n    const sources = useSelector((state) => state.source.sources);\r\n    const documents = useSelector((state) => state.document.documents);\r\n    const uploading = useSelector((state) => state.document.loading);\r\n    const dispatch = useDispatch();\r\n    const selectedSource = useSelector((state) => state.app.selectedSource);\r\n    const [openDocumentUpoadModal, setOpenDocumentUpoadModal] = useState(false);\r\n    \r\n    const items = sources.map(({ name, sourceId }, index) => {\r\n        const subMenu = documents\r\n            .filter((item) => item.sourceId === sourceId)\r\n            .map((document) =>\r\n                getItem(document.name, `${document._id}`, <FilePdfOutlined />, null, true)\r\n            );\r\n        subMenu.push(getItem('Add Document', `addDocument-${index}-${sourceId}`, (uploading == sourceId) ?  <Spin size=\"small\" /> : <PlusOutlined />, null))\r\n        if (subMenu.length > 0)\r\n            return getItem(name, `${sourceId}`, <BsChatLeftDots />, subMenu);\r\n        return getItem(name, `${sourceId}`, <BsChatLeftDots />);\r\n    });\r\n\r\n    useEffect(() => {\r\n        dispatch(getSources());\r\n        dispatch(getDocuments());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let latestKey = getStorage(\"latestKey\") || sources[0]?.sourceId;\r\n        if (latestKey) {\r\n            dispatch(setSelectedSource({ sourceId: latestKey }));\r\n        }\r\n    }, [sources]);\r\n\r\n    // useEffect(() => {\r\n    //     if (selectedSource) {\r\n            \r\n    //     }\r\n    // }, [selectedSource]);\r\n\r\n    if (loading) return <div className=\"text-center text-gray-400\">Loading...</div>;\r\n\r\n    const onOpenChange = (keys) => {\r\n        if(keys.length < 2) return;\r\n        let key = keys[keys.length - 1];\r\n        dispatch(setSelectedSource({ sourceId: key }));\r\n        setStorage(\"latestKey\", key);\r\n    };\r\n\r\n    const handleClick = ({ key }) => {\r\n        if(key.startsWith(\"addDocument\")) {\r\n            if(uploading) {\r\n                return message.warning('Server is busy now. Please wait a moment...');\r\n            }\r\n            setOpenDocumentUpoadModal(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Menu\r\n                openKeys={[`${selectedSource}`]}\r\n                onOpenChange={onOpenChange}\r\n                mode=\"inline\"\r\n                theme=\"dark\"\r\n                items={items}\r\n                selectable={false}\r\n                onClick={handleClick}\r\n            />\r\n            <DocumentUploadModal open={openDocumentUpoadModal} onClose={() => setOpenDocumentUpoadModal(false)}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SourceList;\r\n","import React from \"react\";\r\nimport { Layout } from \"antd\";\r\nimport SourceUploader from \"../Modals/SourceUploader\";\r\nimport SourceList from \"./SourceList\";\r\n\r\nconst { Sider } = Layout;\r\n\r\nconst SideBar = () => {\r\n  return (\r\n    // <Sider\r\n    //   theme={\"dark\"}\r\n    //   width={250}\r\n    //   className=\"hidden sm:block\"\r\n    //   style={{\r\n    //     overflow: 'auto',\r\n    //     height: '100vh',\r\n    //     position: 'fixed',\r\n    //     left: 0,\r\n    //     top: 0,\r\n    //     bottom: 0,\r\n    //   }}\r\n    // >\r\n    //   <SourceUploader />\r\n      <SourceList />\r\n    // </Sider>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import { useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Drawer, Input, Menu, Modal, Popconfirm } from \"antd\";\r\nimport { MenuUnfoldOutlined, DeleteOutlined, EditOutlined, ClearOutlined, CloseOutlined } from \"@ant-design/icons\";\r\n\r\nimport {\r\n    deleteSource,\r\n    renameSource,\r\n} from \"../../../../redux/source/sourceSlice\";\r\nimport UserMenu from \"../../../layouts/partials/UserMenu\";\r\nimport SideBar from \"../SideBar\";\r\nimport { deleteMessages } from \"../../../../redux/message/messageSlice\";\r\nimport SourceUploader from \"../Modals/SourceUploader\";\r\n\r\nconst ToolBar = () => {\r\n\r\n    const location = useLocation();\r\n    const dispatch = useDispatch();\r\n    const deleting = useSelector((state) => state.source.deleting);\r\n    const renaming = useSelector((state) => state.source.renaming);\r\n    const reseting = useSelector((state) => state.source.reseting);\r\n    const selectedSource = useSelector((state) => state.app.selectedSource);\r\n    const [renameModalOpen, setRenameModalOpen] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [propertyName, setPropertyName] = useState(\"\");\r\n\r\n    const showDrawer = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const onClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setPropertyName(e.target.value);\r\n    };\r\n\r\n    const handleOK = () => {\r\n        dispatch(\r\n            renameSource({ name: propertyName, sourceId: selectedSource })\r\n        );\r\n        setPropertyName(\"\");\r\n        setRenameModalOpen(false);\r\n    };\r\n\r\n    const handleDelete = (e) => {\r\n        e.preventDefault();\r\n        dispatch(deleteSource({ sourceId: selectedSource }));\r\n    };\r\n    const handleReset = () => {\r\n        // e.preventDefault();\r\n        dispatch(deleteMessages({ sourceId: selectedSource }));\r\n    };\r\n\r\n    const tools = [\r\n        {\r\n            title: \"Open Documents\",\r\n            label: <span className=\"cursor-pointer inline-block px-1 hover:text-[#40a9ff]\">\r\n                <MenuUnfoldOutlined className=\"!text-[18px]\" />\r\n            </span>,\r\n            className: \"!inline sm:!hidden\",\r\n            onClick: showDrawer,\r\n        },\r\n        {\r\n            title: \"Delete Property\",\r\n            label: <Popconfirm\r\n                placement=\"bottomLeft\"\r\n                description={\r\n                    \"Are you sure you want to delete this property?\"\r\n                }\r\n                onConfirm={handleDelete}\r\n                okText=\"Yes\"\r\n                okButtonProps={{\r\n                    className:\r\n                        \"bg-red-600 hover:!bg-red-500 text-white\",\r\n                }}\r\n                cancelText=\"No\"\r\n                icon={false}\r\n            >\r\n                <span\r\n                    className=\"cursor-pointer inline-block px-1 hover:text-[#40a9ff]\"\r\n                >\r\n                    <DeleteOutlined className=\"!text-[18px]\" />\r\n                </span>\r\n            </Popconfirm>\r\n        },\r\n        {\r\n            title: \"Rename Property\",\r\n            label: <span\r\n                className=\"cursor-pointer inline-block px-1 hover:text-[#40a9ff]\"\r\n            >\r\n                <EditOutlined className=\"!text-[18px]\" />\r\n            </span>,\r\n            onClick: () => {\r\n                setRenameModalOpen(true);\r\n            },\r\n        },\r\n        {\r\n            title: \"Reset chat history\",\r\n            label: <span className=\"cursor-pointer inline-block px-1 hover:text-[#40a9ff]\"\r\n            >\r\n                <ClearOutlined className=\"!text-[18px]\" />\r\n            </span>,\r\n            onClick: handleReset,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <div className=\"flex items-center justify-between flex-wrap p-1 shadow\">\r\n                <Menu mode=\"horizontal\" className=\"w-1/2 border-0\" selectable={false} items={tools} />\r\n                <div className=\"w-1/2 flex justify-end pr-2\">\r\n                    {location.pathname == '/home' && <UserMenu />}\r\n                </div>\r\n            </div>\r\n            <Modal\r\n                title=\"Rename Property\"\r\n                style={{\r\n                    top: \"10%\",\r\n                }}\r\n                open={renameModalOpen}\r\n                onOk={handleOK}\r\n                onCancel={() => setRenameModalOpen(false)}\r\n                okButtonProps={{\r\n                    className: \"bg-blue-600\",\r\n                }}\r\n            >\r\n                <Input\r\n                    placeholder=\"Input property name...\"\r\n                    className=\"mt-2\"\r\n                    onChange={handleChange}\r\n                    value={propertyName}\r\n                />\r\n            </Modal>\r\n            <Drawer title=\"\" width={250} placement=\"left\" style={{ backgroundColor: '#001529', color: '#fff' }} bodyStyle={{ padding: 0 }} onClose={onClose} open={open} closeIcon={<CloseOutlined style={{ color: '#fff' }} />}>\r\n                <SourceUploader />\r\n                <SideBar />\r\n            </Drawer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ToolBar;\r\n","import React from \"react\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Button, Input, Space } from \"antd\";\r\nimport { SendOutlined } from \"@ant-design/icons\";\r\nimport { sendMessage } from \"../../../../redux/message/messageSlice\";\r\n\r\nconst PromptBox = () => {\r\n    const dispatch = useDispatch();\r\n    const waiting = useSelector((state) => state.message.waiting);\r\n    const error = useSelector((state) => state.message.promptError);\r\n    const selectedSource = useSelector((state) => state.app.selectedSource);\r\n    const canAsk = useSelector((state) => state.source.sources.length > 0);\r\n    const [query, setQuery] = useState(\"\");\r\n    const inputRef = useRef(null);\r\n\r\n    // handle form submission\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        if (waiting) return;\r\n        if (!query) return;\r\n        const question = query.trim();\r\n        // here dispatch action to send a question to the server\r\n        dispatch(\r\n            sendMessage({\r\n                sourceId: selectedSource,\r\n                text: question,\r\n                isChatOwner: true,\r\n            })\r\n        );\r\n        setQuery(\"\");\r\n    };\r\n\r\n    // Prevent empty submission\r\n    const handleEnter = (e) => {\r\n        if (e.key === \"Enter\" && query) {\r\n            handleClick(e);\r\n        } else if (e.key == \"Enter\") {\r\n            e.preventDefault();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(canAsk && !waiting) {\r\n            inputRef.current?.focus();\r\n        }\r\n    }, [canAsk, waiting]);\r\n\r\n    return (\r\n        <div className=\"py-3 bg-white w-full mx-auto max-w-3xl px-2\">\r\n            <Space.Compact style={{ width: \"100%\" }} size=\"large\">\r\n                <Input\r\n                    allowClear\r\n                    placeholder={\r\n                        waiting\r\n                            ? \"Waiting for response...\"\r\n                            : \"Ask any question.\"\r\n                    }\r\n                    onKeyDown={handleEnter}\r\n                    value={query}\r\n                    onChange={(e) => setQuery(e.target.value)}\r\n                    ref={inputRef}\r\n                    disabled={!canAsk || waiting}\r\n                />\r\n                <Button \r\n                    type='primary' \r\n                    icon={<SendOutlined />}\r\n                    onClick={handleClick}\r\n                    disabled={!canAsk || waiting}\r\n                >\r\n                </Button>\r\n            </Space.Compact>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PromptBox;\r\n","import { Empty } from \"antd\";\r\n\r\nconst EmptyComponent = () => {\r\n    return (\r\n        <div className=\"flex-1 w-full flex flex-col items-center h-[calc(100vh_-_120px)]\">\r\n            <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EmptyComponent;\r\n","import { Spin } from \"antd\";\r\n\r\nconst LoadingMessage = () => {\r\n    return (\r\n        <div className=\"px-3 py-2 flex flex-row w-full justify-start\">\r\n            <div className=\"px-3 py-2 w-fit lg:max-w-lg flex flex-col  rounded-lg  shadow-slate-200 shadow-sm  text-sm\">\r\n                <Spin />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoadingMessage;\r\n","import { Typewriter } from \"react-simple-typewriter\";\r\n\r\nconst TypingMessage = ({message}) => {\r\n    return <Typewriter words={[message]} typeSpeed={35} />;\r\n};\r\n\r\nexport default TypingMessage\r\n","import React from 'react';\r\nimport TypingMessage from \"../../../../components/TypingMessage\";\r\n\r\nconst Message = ({ message, isLast, onClick }) => {\r\n    const { text, isChatOwner, stream } = message;\r\n    const streamMode = (stream || false) && isLast;\r\n\r\n    return (\r\n        <div\r\n            className={`px-3 py-2 flex flex-row w-full ${\r\n                isChatOwner ? \"justify-end\" : \"justify-start\"\r\n            }`}\r\n            onClick={onClick}\r\n        >\r\n            <div\r\n                className={`px-3 py-2 w-fit lg:max-w-lg flex flex-col  rounded-lg  shadow-slate-200 shadow-sm whitespace-pre-wrap cursor-pointer text-sm \r\n                ${\r\n                    isChatOwner\r\n                        ? \"order-1  bg-[#1677ff] text-white\"\r\n                        : \"order-2  bg-gray-200  text-gray-800\"\r\n                }`}\r\n            >\r\n                {streamMode ? <TypingMessage className=\"whitespace-pre-wrap\" message={text} /> : text}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Card, Drawer, Space } from \"antd\";\r\n\r\nimport LoadingMessage from \"../../../../components/LoadingMessage\";\r\nimport Message from \"./Message\";\r\n\r\nconst MessageList = ({ messages }) => {\r\n    const messageListRef = useRef(null);\r\n    const waiting = useSelector((state) => state.message.waiting);\r\n    const user = useSelector((state) => state.auth.user);\r\n    const [open, setOpen] = useState(false);\r\n    const [selMessageSource, setSelMessageSource] = useState([]);\r\n\r\n    const showDrawer = (message) => {\r\n        if(!user.isAdmin) return;\r\n        setSelMessageSource(message.sourceDocuments);\r\n        setOpen(true);\r\n    };\r\n\r\n    const onClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        // 👇️ scroll to bottom every time messages change\r\n        messageListRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [messages]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"flex flex-1 w-full overflow-auto justify-center mt-1 h-[calc(100vh_-_120px)]\">\r\n                <div className=\"w-full max-w-3xl\">\r\n                    {messages.map((message, index) => (\r\n                        <Message\r\n                            key={index}\r\n                            message={message}\r\n                            isLast={messages.length === index + 1}\r\n                            onClick={() => showDrawer(message)}\r\n                        />\r\n                    ))}\r\n                    {waiting && <LoadingMessage />}\r\n                    <div ref={messageListRef}></div>\r\n                    <Drawer title=\"Sources Documents\" width={350} placement=\"right\" onClose={onClose} open={open}>\r\n                        <Space direction=\"vertical\">\r\n                            {selMessageSource.map((source, i) => <Card title={`Document ${i + 1}`} key={i}>\r\n                                <p>{source.pageContent}</p>\r\n                            </Card>)}\r\n                        </Space>\r\n                    </Drawer>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MessageList;\r\n","import { useEffect } from \"react\";\r\nimport classNames from 'classnames';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { getMessages } from \"../../../../redux/message/messageSlice\";\r\n\r\n// components\r\nimport Loader from \"./Loader\";\r\nimport ToolBar from \"./ToolBar\";\r\nimport PromptBox from \"./PromptBox\";\r\nimport EmptyComponent from \"./Empty\";\r\nimport MessageList from \"./MessageList\";\r\n\r\nconst Main = () => {\r\n\r\n    const location = useLocation();\r\n    const dispatch = useDispatch();\r\n    const loading = useSelector((state) => state.message.loading);\r\n    const error = useSelector((state) => state.message.error);\r\n    const messages = useSelector((state) => state.message.messages) || [];\r\n    const selectedSource = useSelector((state) => state.app.selectedSource);\r\n\r\n    useEffect(() => {\r\n        if (selectedSource) {\r\n            dispatch(getMessages({ sourceId: selectedSource }));\r\n        }\r\n    }, [selectedSource]);\r\n\r\n    // if (loading) return <Loader />;\r\n\r\n    return (\r\n        <div\r\n            className=\"max-w-full mx-auto overflow-hidden\"\r\n        >\r\n            <div className={classNames('bg-white', {'h-screen' : location.pathname == '/home' })}>\r\n                <ToolBar />\r\n                {loading && <Loader />}\r\n                {(!loading && messages.length > 0) ? (\r\n                    <MessageList messages={messages} />\r\n                ) : (\r\n                    <EmptyComponent />\r\n                )}\r\n                <PromptBox />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport { Layout } from \"antd\";\r\nimport Main from \"./Main\";\r\nimport SideBar from \"./SideBar\";\r\nimport SourceUploader from \"./Modals/SourceUploader\";\r\nconst { Content, Sider } = Layout;\r\n\r\nfunction Home() {\r\n    return (\r\n        <>\r\n            <Sider\r\n                theme={\"dark\"}\r\n                width={250}\r\n                className=\"hidden sm:block\"\r\n                style={{\r\n                    overflow: 'auto',\r\n                    height: '100vh',\r\n                    position: 'fixed',\r\n                    left: 0,\r\n                    top: 0,\r\n                    bottom: 0,\r\n                }}\r\n            >\r\n                <SourceUploader />\r\n                <SideBar />\r\n            </Sider>\r\n            <Layout className=\"sm:ml-[250px] max-h-screen\">\r\n                <Content>\r\n                    <Main />\r\n                </Content>\r\n            </Layout>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n"],"names":["_jsx","className","children","Spin","size","_Form$useForm","Form","form","_slicedToArray","_useState","useState","_useState2","sources","setSources","_useState3","_useState4","showModal","setShowModal","dispatch","useDispatch","uploading","useSelector","state","source","uploadingError","_jsxs","type","onClick","PlusOutlined","Modal","open","title","okText","cancelText","onCancel","onOk","validateFields","then","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","propertyName","fileList","formData","wrap","_context","prev","next","dragger","FormData","append","forEach","_ref2","originFileObj","uploadSource","resetFields","stop","_x","apply","arguments","catch","info","console","log","okButtonProps","loading","layout","name","label","rules","required","message","Input","noStyle","Upload","beforeUpload","accept","multiple","maxCount","onChange","_ref3","filterdFiles","filter","file","InboxOutlined","onClose","document","selectedSource","app","uploadDocument","_ref4","error","documents","openDocumentUpoadModal","setOpenDocumentUpoadModal","items","map","index","sourceId","subMenu","item","getItem","concat","_id","FilePdfOutlined","push","length","BsChatLeftDots","useEffect","getSources","getDocuments","_sources$","latestKey","getStorage","setSelectedSource","Menu","openKeys","onOpenChange","keys","key","setStorage","mode","theme","selectable","startsWith","DocumentUploadModal","Layout","SourceList","location","useLocation","deleting","renaming","reseting","renameModalOpen","setRenameModalOpen","setOpen","_useState5","_useState6","setPropertyName","tools","MenuUnfoldOutlined","Popconfirm","placement","description","onConfirm","e","preventDefault","deleteSource","icon","DeleteOutlined","EditOutlined","ClearOutlined","deleteMessages","_Fragment","pathname","UserMenu","style","top","renameSource","placeholder","target","value","Drawer","width","backgroundColor","color","bodyStyle","padding","closeIcon","CloseOutlined","SourceUploader","SideBar","waiting","promptError","canAsk","query","setQuery","inputRef","useRef","handleClick","question","trim","sendMessage","text","isChatOwner","_inputRef$current","current","focus","Space","allowClear","onKeyDown","ref","disabled","Button","SendOutlined","Empty","image","Typewriter","words","typeSpeed","isLast","streamMode","stream","TypingMessage","messages","messageListRef","user","auth","selMessageSource","setSelMessageSource","_messageListRef$curre","scrollIntoView","behavior","Message","isAdmin","sourceDocuments","showDrawer","LoadingMessage","direction","i","Card","pageContent","getMessages","classNames","ToolBar","Loader","MessageList","EmptyComponent","PromptBox","Content","Sider","overflow","height","position","left","bottom","Main"],"sourceRoot":""}