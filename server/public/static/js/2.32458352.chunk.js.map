{"version":3,"file":"static/js/2.32458352.chunk.js","mappings":"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","sources":["services/sourceAPI.js","container/pages/Home/Modals/SourceUploader.jsx","container/pages/Home/Modals/DocumentUploadModal.jsx","container/pages/Home/SideBar/SourceList.jsx","container/pages/Home/SideBar/index.jsx","container/pages/Home/Main/ToolBar.jsx","container/pages/Home/Main/PromptBox.jsx","components/LoadingMessage.jsx","components/TypingMessage.jsx","container/pages/Home/Main/Message.jsx","container/pages/Home/Main/MessageList.jsx","container/pages/Home/Main/index.jsx","container/pages/Home/Home.jsx"],"sourcesContent":["import { postRequest } from \"./axiosClient\";\r\n\r\nexport const deleteFile = (data) => postRequest('sources/deleteFile', data);","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { InboxOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { Form, Input, Modal, Progress, Spin, Upload, message } from \"antd\";\r\n\r\nimport { addSource } from \"../../../../redux/source/sourceSlice\";\r\nimport constants from \"../../../../config/constants\";\r\nimport { getStorage } from \"../../../../helpers\";\r\nimport { deleteFile } from \"../../../../services/sourceAPI\";\r\n\r\nconst SourceUploader = () => {\r\n    const [form] = Form.useForm();\r\n    const [sources, setSources] = useState([]);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const uploading = useSelector((state) => state.source.uploading);\r\n    const uploadingError = useSelector((state) => state.source.uploadingError);\r\n    const onRemove = ((file) => {\r\n        if(file.path) {\r\n            deleteFile({path: file.path});\r\n        }\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"text-center\">\r\n            <button\r\n                className=\"bg-transparent text-white border border-white border-dashed hover:border-indigo-500 font-bold uppercase text-sm rounded shadow hover:shadow-lg outline-none focus:outline-none m-2 ease-linear transition-all duration-150 px-12 py-3 cursor-pointer flex items-center\"\r\n                type=\"button\"\r\n                onClick={() => setShowModal(true)}\r\n            >\r\n                {!uploading && (<><PlusOutlined className=\"text-white mr-1\" /> Add Property</>)}\r\n                {uploading && (<><Spin size=\"small\" className=\"mr-1\" /> Processing...</>)}\r\n            </button>\r\n\r\n            <Modal\r\n                open={showModal}\r\n                title=\"Add a property\"\r\n                okText=\"Submit\"\r\n                cancelText=\"Cancel\"\r\n                onCancel={() => setShowModal(false)}\r\n                onOk={() => {\r\n                    form.validateFields()\r\n                        .then(async (values) => {\r\n                            const sourceName = values.propertyName;\r\n                            const fileList = values.dragger.fileList.filter(file => file.status == 'done').map(file => ({path: file.path, filename: file.response.filename}));\r\n                            if(fileList.length == 0) return message.error('No files uploaded.');\r\n                            dispatch(addSource({sourceName, fileList}));\r\n                            form.resetFields();\r\n                            setSources([]);\r\n                            setShowModal(false);\r\n                        })\r\n                        .catch((info) => {\r\n                            console.log(\"Validate Failed:\", info);\r\n                        });\r\n                }}\r\n                okButtonProps={{ loading: uploading }}\r\n            >\r\n                <Form form={form} layout=\"vertical\">\r\n                    <Form.Item\r\n                        name=\"propertyName\"\r\n                        label=\"Property Name\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Please input the name of property\",\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item name=\"dragger\" label=\"dragger\" noStyle>\r\n                        <Upload.Dragger\r\n                            name=\"file\"\r\n                            action={`${constants.HOST_URL}sources/uploadFile`}\r\n                            accept=\"application/pdf\"\r\n                            headers={{\r\n                                Authorization: getStorage('token')\r\n                            }}\r\n                            fileList={sources}\r\n                            multiple={true}\r\n                            maxCount={5}\r\n                            onChange={({ fileList, file }) => {\r\n                                if(file.status == 'done') {\r\n                                    file.path = file.response?.path;\r\n                                }\r\n                                const filterdFiles = fileList.filter(\r\n                                    (file) => file.type === \"application/pdf\"\r\n                                );\r\n                                setSources(filterdFiles);\r\n                            }}\r\n                            onRemove={onRemove}\r\n                        >\r\n                            <p className=\"ant-upload-drag-icon\">\r\n                                <InboxOutlined />\r\n                            </p>\r\n                            <p className=\"ant-upload-text\">\r\n                                Click or drag file to this area to upload\r\n                            </p>\r\n                        </Upload.Dragger>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SourceUploader;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { InboxOutlined } from \"@ant-design/icons\";\r\nimport { Form, Modal, Upload, message } from \"antd\";\r\nimport { uploadDocument } from \"../../../../redux/document/documentSlice\";\r\nimport { getStorage } from \"../../../../helpers\";\r\nimport constants from \"../../../../config/constants\";\r\nimport { deleteFile } from \"../../../../services/sourceAPI\";\r\n\r\nconst DocumentUploadModal = ({ open, onClose }) => {\r\n    const [form] = Form.useForm();\r\n    const [sources, setSources] = useState([]);\r\n    const dispatch = useDispatch();\r\n\r\n    const uploading = useSelector((state) => state.document.loading);\r\n    const selectedSource = useSelector((state) => state.app.selectedSource);\r\n    const uploadingError = useSelector((state) => state.source.uploadingError);\r\n\r\n    const onRemove = ((file) => {\r\n        if (file.path) {\r\n            deleteFile({ path: file.path });\r\n        }\r\n    });\r\n\r\n    return (\r\n        <Modal\r\n            open={open}\r\n            title=\"Add a Documents\"\r\n            okText=\"Submit\"\r\n            cancelText=\"Cancel\"\r\n            onCancel={() => onClose()}\r\n            onOk={() => {\r\n                form.validateFields()\r\n                    .then(async (values) => {\r\n                        const fileList = values.dragger.fileList.filter(file => file.status == 'done').map(file => ({ path: file.path, filename: file.response.filename }));\r\n                        if (fileList.length == 0) return message.error('No files uploaded.');\r\n                        dispatch(uploadDocument({ fileList, sourceId: selectedSource }));\r\n                        form.resetFields();\r\n                        setSources([]);\r\n                        onClose();\r\n                    })\r\n                    .catch((info) => {\r\n                        console.log(\"Validate Failed:\", info);\r\n                    });\r\n            }}\r\n            okButtonProps={{ loading: !!uploading }}\r\n        >\r\n            <Form form={form} layout=\"vertical\">\r\n                <Form.Item name=\"dragger\" label=\"dragger\" noStyle>\r\n                    <Upload.Dragger\r\n                        name=\"file\"\r\n                        action={`${constants.HOST_URL}sources/uploadFile`}\r\n                        accept=\"application/pdf\"\r\n                        headers={{\r\n                            Authorization: getStorage('token')\r\n                        }}\r\n                        fileList={sources}\r\n                        multiple={true}\r\n                        maxCount={5}\r\n                        onChange={({ fileList, file }) => {\r\n                            if (file.status == 'done') {\r\n                                file.path = file.response?.path;\r\n                            }\r\n                            const filterdFiles = fileList.filter(\r\n                                (file) => file.type === \"application/pdf\"\r\n                            );\r\n                            setSources(filterdFiles);\r\n                        }}\r\n                        onRemove={onRemove}\r\n                    >\r\n                        <p className=\"ant-upload-drag-icon\">\r\n                            <InboxOutlined />\r\n                        </p>\r\n                        <p className=\"ant-upload-text\">\r\n                            Click or drag file to this area to upload\r\n                        </p>\r\n                    </Upload.Dragger>\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default DocumentUploadModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Menu, Spin, message, Dropdown, Popconfirm, Form, Modal, Input, Pagination } from \"antd\";\r\nimport { FilePdfOutlined, PlusOutlined, DeleteOutlined, EditOutlined, EyeOutlined } from '@ant-design/icons';\r\nimport { BsChatLeftDots, BsThreeDotsVertical } from \"react-icons/bs\";\r\nimport { Document, Page, pdfjs } from \"react-pdf\";\r\n\r\nimport { getSources } from \"../../../../redux/source/sourceSlice\";\r\nimport { deleteDocument, getDocuments, updateDocument } from \"../../../../redux/document/documentSlice\";\r\nimport { setStorage, getStorage, getItem } from \"../../../../helpers\";\r\nimport { setSelectedSource } from \"../../../../redux/app/appSlice\";\r\nimport DocumentUploadModal from \"../Modals/DocumentUploadModal\";\r\n\r\nconst SourceList = () => {\r\n    useEffect(() => { pdfjs.GlobalWorkerOptions.workerSrc = `pdf.worker.js`; });\r\n    const [selectedDocument, setSelectedDocument] = useState({});\r\n    const [openPDFModal, setOpenPDFModal] = useState(false);\r\n    const loading = useSelector((state) => state.source.loading);\r\n    const error = useSelector((state) => state.source.error);\r\n    const sources = useSelector((state) => state.source.sources);\r\n    const documents = useSelector((state) => state.document.documents);\r\n    const uploading = useSelector((state) => state.document.loading);\r\n    const dispatch = useDispatch();\r\n    const selectedSource = useSelector((state) => state.app.selectedSource);\r\n    const [openDocumentUploadModal, setOpenDocumentUploadModal] = useState(false);\r\n    const [openDocumentUpdateModal, setOpenDocumentUpdateModal] = useState(false);\r\n    const [form] = Form.useForm();\r\n\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n\r\n    const onDocumentLoadSuccess = ({ numPages }) => {\r\n        setNumPages(numPages);\r\n    }\r\n\r\n    const confirm = (e) => {\r\n        console.log(e);\r\n        dispatch(deleteDocument(selectedDocument._id));\r\n    };\r\n    const cancel = (e) => {\r\n        console.log(e);\r\n    };\r\n\r\n    const actionItems = [\r\n        {\r\n            key: '1',\r\n            label: <Popconfirm\r\n                title=\"Delete the document!\"\r\n                description=\"Are you sure to delete this document?\"\r\n                onConfirm={confirm}\r\n                onCancel={cancel}\r\n                okText=\"Yes\"\r\n                cancelText=\"No\"\r\n            ><DeleteOutlined /> Delete </Popconfirm>,\r\n        },\r\n        {\r\n            key: '2',\r\n            label: <span onClick={() => setOpenDocumentUpdateModal(true)}><EditOutlined /> Rename</span>,\r\n        },\r\n        {\r\n            key: '3',\r\n            label: <span onClick={() => {\r\n                window.open(selectedDocument.path.replace('public/', ''));\r\n            }}><EyeOutlined /> View</span>,\r\n        },\r\n    ];\r\n\r\n    const items = sources.map(({ name, sourceId }, index) => {\r\n        const subMenu = documents\r\n            .filter((item) => item.sourceId === sourceId)\r\n            .map((document) =>\r\n                getItem(<div className=\"flex justify-between items-center\"><span className=\"max-w-[135px] text-ellipsis overflow-hidden\" title={document.name}>{document.name}</span> <Dropdown onOpenChange={(open) => {\r\n                    if (open) {\r\n                        setSelectedDocument(document);\r\n                    }\r\n                }} trigger='click' menu={{ items: actionItems }} placement=\"bottomLeft\" arrow={{ pointAtCenter: true }}>\r\n                    <div><BsThreeDotsVertical /></div>\r\n                </Dropdown></div>, `${document._id}`, <FilePdfOutlined />, null, true)\r\n            );\r\n        subMenu.push(getItem((uploading == sourceId) ? 'Processing...' : 'Add Document', `addDocument-${index}-${sourceId}`, (uploading == sourceId) ? <Spin size=\"small\" /> : <PlusOutlined />, null))\r\n        if (subMenu.length > 0)\r\n            return getItem(name, `${sourceId}`, <BsChatLeftDots />, subMenu);\r\n        return getItem(name, `${sourceId}`, <BsChatLeftDots />);\r\n    });\r\n\r\n    useEffect(() => {\r\n        dispatch(getSources());\r\n        dispatch(getDocuments());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let latestKey = getStorage(\"latestKey\") || sources[0]?.sourceId;\r\n        if (latestKey) {\r\n            dispatch(setSelectedSource({ sourceId: latestKey }));\r\n        }\r\n    }, [sources]);\r\n\r\n    // useEffect(() => {\r\n    //     if (selectedSource) {\r\n\r\n    //     }\r\n    // }, [selectedSource]);\r\n\r\n    if (loading) return <div className=\"text-center text-gray-400\">Loading...</div>;\r\n\r\n    const onOpenChange = (keys) => {\r\n        if (keys.length < 2) return;\r\n        let key = keys[keys.length - 1];\r\n        dispatch(setSelectedSource({ sourceId: key }));\r\n        setStorage(\"latestKey\", key);\r\n    };\r\n\r\n    const handleClick = ({ key }) => {\r\n        if (key.startsWith(\"addDocument\")) {\r\n            if (uploading) {\r\n                return message.warning('Server is busy now. Please wait a moment...');\r\n            }\r\n            setOpenDocumentUploadModal(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Menu\r\n                openKeys={[`${selectedSource}`]}\r\n                onOpenChange={onOpenChange}\r\n                mode=\"inline\"\r\n                theme=\"dark\"\r\n                items={items}\r\n                selectable={false}\r\n                onClick={handleClick}\r\n            />\r\n            <DocumentUploadModal open={openDocumentUploadModal} onClose={() => setOpenDocumentUploadModal(false)} />\r\n            <Modal\r\n                open={openDocumentUpdateModal}\r\n                title=\"Change Documents\"\r\n                okText=\"Submit\"\r\n                cancelText=\"Cancel\"\r\n                onCancel={() => setOpenDocumentUpdateModal(false)}\r\n                onOk={() => {\r\n                    form.validateFields()\r\n                        .then(async (values) => {\r\n                            dispatch(updateDocument({ ...values, id: selectedDocument._id }));\r\n                            form.resetFields();\r\n                            setOpenDocumentUpdateModal(false);\r\n                        })\r\n                        .catch((info) => {\r\n                            console.log(\"Validate Failed:\", info);\r\n                        });\r\n                }}\r\n            >\r\n                <Form form={form} layout=\"vertical\">\r\n                    <Form.Item\r\n                        name=\"documentName\"\r\n                        label=\"Document Name\"\r\n                        initialValue={selectedDocument.name}\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Please input the name of property\",\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n            {/* <Modal\r\n                width={650}\r\n                open={openPDFModal}\r\n                title={selectedDocument.name}\r\n                onCancel={() => setOpenPDFModal(false)}\r\n                footer={[<Pagination\r\n                    total={numPages}\r\n                    showQuickJumper\r\n                    defaultPageSize={1}\r\n                    showTotal={(total) => `${pageNumber}/${total}`}\r\n                    onChange={page => setPageNumber(page)}\r\n                />]}\r\n            >\r\n                <div className=\"w-full\">\r\n                    {selectedDocument.path && <Document file={`${selectedDocument.path.replace('public/', '')}`} onLoadSuccess={onDocumentLoadSuccess}>\r\n                        <Page pageNumber={pageNumber} renderTextLayer={false} width={600} renderAnnotationLayer={false} />\r\n                    </Document>}\r\n                </div>\r\n            </Modal> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SourceList;\r\n","import React from \"react\";\r\nimport { Layout } from \"antd\";\r\nimport SourceUploader from \"../Modals/SourceUploader\";\r\nimport SourceList from \"./SourceList\";\r\n\r\nconst { Sider } = Layout;\r\n\r\nconst SideBar = () => {\r\n  return (\r\n    // <Sider\r\n    //   theme={\"dark\"}\r\n    //   width={250}\r\n    //   className=\"hidden sm:block\"\r\n    //   style={{\r\n    //     overflow: 'auto',\r\n    //     height: '100vh',\r\n    //     position: 'fixed',\r\n    //     left: 0,\r\n    //     top: 0,\r\n    //     bottom: 0,\r\n    //   }}\r\n    // >\r\n    //   <SourceUploader />\r\n      <SourceList />\r\n    // </Sider>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import { useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Drawer, Input, Menu, Modal, Popconfirm } from \"antd\";\r\nimport { MenuUnfoldOutlined, DeleteOutlined, EditOutlined, ClearOutlined, CloseOutlined } from \"@ant-design/icons\";\r\n\r\nimport {\r\n    deleteSource,\r\n    renameSource,\r\n} from \"../../../../redux/source/sourceSlice\";\r\nimport UserMenu from \"../../../layouts/partials/UserMenu\";\r\nimport SideBar from \"../SideBar\";\r\nimport { deleteMessages } from \"../../../../redux/message/messageSlice\";\r\nimport SourceUploader from \"../Modals/SourceUploader\";\r\n\r\nconst ToolBar = () => {\r\n\r\n    const location = useLocation();\r\n    const dispatch = useDispatch();\r\n    const deleting = useSelector((state) => state.source.deleting);\r\n    const renaming = useSelector((state) => state.source.renaming);\r\n    const reseting = useSelector((state) => state.source.reseting);\r\n    const selectedSource = useSelector((state) => state.app.selectedSource);\r\n    const [renameModalOpen, setRenameModalOpen] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [propertyName, setPropertyName] = useState(\"\");\r\n\r\n    const showDrawer = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const onClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setPropertyName(e.target.value);\r\n    };\r\n\r\n    const handleOK = () => {\r\n        dispatch(\r\n            renameSource({ name: propertyName, sourceId: selectedSource })\r\n        );\r\n        setPropertyName(\"\");\r\n        setRenameModalOpen(false);\r\n    };\r\n\r\n    const handleDelete = (e) => {\r\n        e.preventDefault();\r\n        dispatch(deleteSource({ sourceId: selectedSource }));\r\n    };\r\n    const handleReset = () => {\r\n        // e.preventDefault();\r\n        dispatch(deleteMessages({ sourceId: selectedSource }));\r\n    };\r\n\r\n    const tools = [\r\n        {\r\n            title: \"Open Documents\",\r\n            label: <span className=\"cursor-pointer inline-block px-1 hover:text-[#40a9ff]\">\r\n                <MenuUnfoldOutlined className=\"!text-[18px]\" />\r\n            </span>,\r\n            className: \"!inline sm:!hidden\",\r\n            onClick: showDrawer,\r\n        },\r\n        {\r\n            title: \"Delete Property\",\r\n            label: <Popconfirm\r\n                placement=\"bottomLeft\"\r\n                description={\r\n                    \"Are you sure you want to delete this property?\"\r\n                }\r\n                onConfirm={handleDelete}\r\n                okText=\"Yes\"\r\n                okButtonProps={{\r\n                    className:\r\n                        \"bg-red-600 hover:!bg-red-500 text-white\",\r\n                }}\r\n                cancelText=\"No\"\r\n                icon={false}\r\n            >\r\n                <span\r\n                    className=\"cursor-pointer inline-block px-1 hover:text-[#40a9ff]\"\r\n                >\r\n                    <DeleteOutlined className=\"!text-[18px]\" /> Delete\r\n                </span>\r\n            </Popconfirm>\r\n        },\r\n        {\r\n            title: \"Rename Property\",\r\n            label: <span\r\n                className=\"cursor-pointer inline-block px-1 hover:text-[#40a9ff]\"\r\n            >\r\n                <EditOutlined className=\"!text-[18px]\" /> Rename\r\n            </span>,\r\n            onClick: () => {\r\n                setRenameModalOpen(true);\r\n            },\r\n        },\r\n        {\r\n            title: \"Reset chat history\",\r\n            label: <span className=\"cursor-pointer inline-block px-1 hover:text-[#40a9ff]\"\r\n            >\r\n                <ClearOutlined className=\"!text-[18px]\" /> Reset chat history\r\n            </span>,\r\n            onClick: handleReset,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <div className=\"z-[9999] w-full sticky flex items-center justify-between flex-wrap p-1 shadow left-0 top-0 bg-white\">\r\n                <Menu mode=\"horizontal\" className=\"w-1/2 border-0\" selectable={false} items={tools} />\r\n                <div className=\"w-1/2 flex justify-end pr-2\">\r\n                    {location.pathname == '/home' && <UserMenu />}\r\n                </div>\r\n            </div>\r\n            <Modal\r\n                title=\"Rename Property\"\r\n                style={{\r\n                    top: \"10%\",\r\n                }}\r\n                open={renameModalOpen}\r\n                onOk={handleOK}\r\n                onCancel={() => setRenameModalOpen(false)}\r\n                okButtonProps={{\r\n                    className: \"bg-blue-600\",\r\n                }}\r\n            >\r\n                <Input\r\n                    placeholder=\"Input property name...\"\r\n                    className=\"mt-2\"\r\n                    onChange={handleChange}\r\n                    value={propertyName}\r\n                />\r\n            </Modal>\r\n            <Drawer title=\"\" width={250} placement=\"left\" style={{ backgroundColor: '#001529', color: '#fff' }} bodyStyle={{ padding: 0 }} onClose={onClose} open={open} closeIcon={<CloseOutlined style={{ color: '#fff' }} />}>\r\n                <SourceUploader />\r\n                <SideBar />\r\n            </Drawer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ToolBar;\r\n","import React from \"react\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Button, Input, Space } from \"antd\";\r\nimport { SendOutlined } from \"@ant-design/icons\";\r\nimport { sendMessage } from \"../../../../redux/message/messageSlice\";\r\n\r\nconst PromptBox = () => {\r\n    const dispatch = useDispatch();\r\n    const waiting = useSelector((state) => state.message.waiting);\r\n    const error = useSelector((state) => state.message.promptError);\r\n    const selectedSource = useSelector((state) => state.app.selectedSource);\r\n    const canAsk = useSelector((state) => state.source.sources.length > 0);\r\n    const [query, setQuery] = useState(\"\");\r\n    const inputRef = useRef(null);\r\n\r\n    // handle form submission\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        if (waiting) return;\r\n        if (!query) return;\r\n        const question = query.trim();\r\n        // here dispatch action to send a question to the server\r\n        dispatch(\r\n            sendMessage({\r\n                sourceId: selectedSource,\r\n                text: question,\r\n                isChatOwner: true,\r\n            })\r\n        );\r\n        setQuery(\"\");\r\n    };\r\n\r\n    // Prevent empty submission\r\n    const handleEnter = (e) => {\r\n        if (e.key === \"Enter\" && query) {\r\n            handleClick(e);\r\n        } else if (e.key == \"Enter\") {\r\n            e.preventDefault();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (canAsk && !waiting) {\r\n            inputRef.current?.focus();\r\n        }\r\n    }, [canAsk, waiting]);\r\n\r\n    return (\r\n        <div className=\"py-3 bg-white w-full px-2 sticky bottom-0 left-0\">\r\n            <div className=\"max-w-3xl pl-2 mx-auto\">\r\n                <Space.Compact style={{ width: \"100%\" }} size=\"large\">\r\n                    <Input\r\n                        allowClear\r\n                        placeholder={\r\n                            waiting\r\n                                ? \"Waiting for response...\"\r\n                                : \"Ask any question.\"\r\n                        }\r\n                        onKeyDown={handleEnter}\r\n                        value={query}\r\n                        onChange={(e) => setQuery(e.target.value)}\r\n                        ref={inputRef}\r\n                        disabled={!canAsk || waiting}\r\n                    />\r\n                    <Button\r\n                        type='primary'\r\n                        icon={<SendOutlined />}\r\n                        onClick={handleClick}\r\n                        disabled={!canAsk || waiting}\r\n                    >\r\n                    </Button>\r\n                </Space.Compact>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PromptBox;\r\n","import { Spin } from \"antd\";\r\n\r\nconst LoadingMessage = () => {\r\n    return (\r\n        <div className=\"px-3 py-2 flex flex-row w-full justify-start\">\r\n            <div className=\"px-3 py-2 w-fit lg:max-w-lg flex flex-col  rounded-lg  shadow-slate-200 shadow-sm  text-sm\">\r\n                <Spin />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoadingMessage;\r\n","import { Typewriter } from \"react-simple-typewriter\";\r\n\r\nconst TypingMessage = ({message}) => {\r\n    return <Typewriter words={[message]} typeSpeed={20} />;\r\n};\r\n\r\nexport default TypingMessage\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { MailOutlined, CopyOutlined } from '@ant-design/icons';\r\nimport { Button, message as toast } from 'antd';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport classNames from 'classnames';\r\n\r\nimport TypingMessage from \"../../../../components/TypingMessage\";\r\n\r\nconst Message = ({ message, isLast, onClick }) => {\r\n    const { text, isChatOwner, stream } = message;\r\n    const user = useSelector(state => state.auth.user);\r\n    const streamMode = stream && isLast;\r\n\r\n    return (\r\n        <div\r\n            className={`px-2 py-2 flex w-full ${isChatOwner ? \"justify-end flex-row\" : \"flex-col-reverse justify-start flex-wrap\"\r\n                }`}\r\n        >\r\n            <div\r\n                className={`px-3 py-2 w-fit lg:max-w-lg flex flex-col shadow-slate-200 shadow-sm whitespace-pre-wrap text-sm \r\n                ${isChatOwner\r\n                        ? \"order-1  bg-blue-500 text-white cursor-default rounded-bl-lg rounded-tr-lg rounded-tl-lg\"\r\n                        : \"order-2  bg-gray-200  text-gray-800 rounded-br-lg rounded-tr-lg rounded-tl-lg\"\r\n                    }`}\r\n            >\r\n                <div className={classNames({ 'cursor-pointer': !isChatOwner })} onClick={() => isChatOwner ? null : onClick()}>\r\n                    {streamMode ? <TypingMessage className=\"whitespace-pre-wrap\" message={text} /> : text}\r\n                </div>\r\n            </div>\r\n            {!isChatOwner && <div className='mt-2 flex'><Link\r\n                to='#'\r\n                onClick={(e) => {\r\n                    window.location.href = `mailto:${user.email}?subject=${'Landlordgenius.AI'}&body=${text}`;\r\n                    e.preventDefault();\r\n                }}\r\n            >\r\n                <Button className='mr-2' type='primary' icon={<MailOutlined />}>Email</Button>\r\n            </Link> <CopyToClipboard text={text} onCopy={() => {\r\n                toast.info('This text is copied!')\r\n            }}><Button type='primary' icon={<CopyOutlined />}>Copy</Button></CopyToClipboard></div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Card, Drawer, Space } from \"antd\";\r\n\r\nimport LoadingMessage from \"../../../../components/LoadingMessage\";\r\nimport Message from \"./Message\";\r\n\r\nconst MessageList = ({ messages }) => {\r\n    const messageListRef = useRef(null);\r\n    const waiting = useSelector((state) => state.message.waiting);\r\n    const selectedSource = useSelector((state) => state.app.selectedSource);\r\n    const user = useSelector((state) => state.auth.user);\r\n    const [open, setOpen] = useState(false);\r\n    const [selMessageSource, setSelMessageSource] = useState([]);\r\n\r\n    const showDrawer = (message) => {\r\n        if (!user.isAdmin) return;\r\n        setSelMessageSource(message.sourceDocuments);\r\n        setOpen(true);\r\n    };\r\n\r\n    const onClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        // 👇️ scroll to bottom every time messages change\r\n        messageListRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [messages]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"w-full max-w-3xl py-5 sm:py-0 mx-auto\">\r\n                {selectedSource && messages.map((message, index) => (\r\n                    <Message\r\n                        key={index}\r\n                        message={message}\r\n                        isLast={messages.length === index + 1}\r\n                        onClick={() => showDrawer(message)}\r\n                    />\r\n                ))}\r\n                {waiting && <LoadingMessage />}\r\n                <div ref={messageListRef}></div>\r\n                <Drawer title=\"Sources Documents\" width={350} placement=\"right\" onClose={onClose} open={open}>\r\n                    <Space direction=\"vertical\">\r\n                        {selMessageSource.map((source, i) => <Card title={`Document ${i + 1}`} key={i}>\r\n                            <p>{source.pageContent}</p>\r\n                        </Card>)}\r\n                    </Space>\r\n                </Drawer>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MessageList;\r\n","import { useEffect } from \"react\";\r\nimport classNames from 'classnames';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Empty, Spin } from \"antd\";\r\n\r\nimport { getMessages } from \"../../../../redux/message/messageSlice\";\r\n\r\n// components\r\nimport ToolBar from \"./ToolBar\";\r\nimport PromptBox from \"./PromptBox\";\r\nimport MessageList from \"./MessageList\";\r\n\r\nconst Main = () => {\r\n\r\n    const location = useLocation();\r\n    const dispatch = useDispatch();\r\n    const loading = useSelector((state) => state.message.loading);\r\n    const error = useSelector((state) => state.message.error);\r\n    const messages = useSelector((state) => state.message.messages) || [];\r\n    const selectedSource = useSelector((state) => state.app.selectedSource);\r\n\r\n    useEffect(() => {\r\n        if (selectedSource) {\r\n            dispatch(getMessages({ sourceId: selectedSource }));\r\n        }\r\n    }, [selectedSource]);\r\n\r\n    // if (loading) return <Loader />;\r\n\r\n    return (\r\n        <div\r\n            className=\"max-w-full mx-auto\"\r\n        >\r\n            <div className={classNames('bg-white', { 'h-full': location.pathname == '/home' })}>\r\n                <ToolBar />\r\n                <div className={classNames(\"flex justify-center overflow-auto h-[calc(100vh_-_117px)]\", {'items-center' : (loading || !messages.length)})}>\r\n                    {loading && <Spin className=\"mt-4\" size=\"large\"></Spin>}\r\n                    {(!loading && messages.length > 0) ? (\r\n                        <MessageList messages={messages} />\r\n                    ) : (\r\n                        !loading && <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    )}\r\n                </div>\r\n                <PromptBox />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport { Layout } from \"antd\";\r\nimport Main from \"./Main\";\r\nimport SideBar from \"./SideBar\";\r\nimport SourceUploader from \"./Modals/SourceUploader\";\r\nconst { Content, Sider } = Layout;\r\n\r\nfunction Home() {\r\n    return (\r\n        <>\r\n            <Sider\r\n                theme={\"dark\"}\r\n                width={250}\r\n                className=\"hidden sm:block z-50\"\r\n                style={{\r\n                    overflow: 'auto',\r\n                    height: '100vh',\r\n                    position: 'fixed',\r\n                    left: 0,\r\n                    top: 0,\r\n                    bottom: 0,\r\n                }}\r\n            >\r\n                <SourceUploader />\r\n                <SideBar />\r\n            </Sider>\r\n            <Layout className=\"sm:ml-[250px]\">\r\n                <Content>\r\n                    <Main />\r\n                </Content>\r\n            </Layout>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n"],"names":["deleteFile","data","postRequest","_Form$useForm","Form","form","_slicedToArray","_useState","useState","_useState2","sources","setSources","_useState3","_useState4","showModal","setShowModal","dispatch","useDispatch","uploading","useSelector","state","source","uploadingError","_jsxs","className","children","type","onClick","_Fragment","_jsx","PlusOutlined","Spin","size","Modal","open","title","okText","cancelText","onCancel","onOk","validateFields","then","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","sourceName","fileList","wrap","_context","prev","next","propertyName","dragger","filter","file","status","map","path","filename","response","length","abrupt","message","addSource","resetFields","stop","_x","apply","arguments","catch","info","console","log","okButtonProps","loading","layout","name","label","rules","required","Input","noStyle","Upload","action","concat","constants","accept","headers","Authorization","getStorage","multiple","maxCount","onChange","_ref2","_file$response","filterdFiles","onRemove","InboxOutlined","onClose","document","selectedSource","app","uploadDocument","sourceId","_ref3","useEffect","pdfjs","selectedDocument","setSelectedDocument","error","documents","_useState5","_useState6","openDocumentUploadModal","setOpenDocumentUploadModal","_useState7","_useState8","openDocumentUpdateModal","setOpenDocumentUpdateModal","_useState9","_useState10","_useState11","_useState12","actionItems","key","Popconfirm","description","onConfirm","e","deleteDocument","_id","DeleteOutlined","EditOutlined","window","replace","EyeOutlined","items","index","subMenu","item","getItem","Dropdown","onOpenChange","trigger","menu","placement","arrow","pointAtCenter","BsThreeDotsVertical","FilePdfOutlined","push","BsChatLeftDots","getSources","getDocuments","_sources$","latestKey","setSelectedSource","Menu","openKeys","keys","setStorage","mode","theme","selectable","startsWith","DocumentUploadModal","_ref4","updateDocument","_objectSpread","id","initialValue","Layout","SourceList","location","useLocation","deleting","renaming","reseting","renameModalOpen","setRenameModalOpen","setOpen","setPropertyName","tools","MenuUnfoldOutlined","preventDefault","deleteSource","icon","ClearOutlined","deleteMessages","pathname","UserMenu","style","top","renameSource","placeholder","target","value","Drawer","width","backgroundColor","color","bodyStyle","padding","closeIcon","CloseOutlined","SourceUploader","SideBar","waiting","promptError","canAsk","query","setQuery","inputRef","useRef","handleClick","question","trim","sendMessage","text","isChatOwner","_inputRef$current","current","focus","Space","allowClear","onKeyDown","ref","disabled","Button","SendOutlined","Typewriter","words","typeSpeed","isLast","stream","user","auth","streamMode","classNames","TypingMessage","Link","to","href","email","MailOutlined","CopyToClipboard","onCopy","toast","CopyOutlined","messages","messageListRef","selMessageSource","setSelMessageSource","_messageListRef$curre","scrollIntoView","behavior","Message","isAdmin","sourceDocuments","showDrawer","LoadingMessage","direction","i","Card","pageContent","getMessages","ToolBar","MessageList","Empty","image","PromptBox","Content","Sider","overflow","height","position","left","bottom","Main"],"sourceRoot":""}